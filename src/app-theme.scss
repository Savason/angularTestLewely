@import '~@angular/material/theming';

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue.
$candy-app-primary: mat-palette($mat-blue-gray, 900);
$candy-app-accent: mat-palette($mat-light-blue, A700);
// The warn palette is optional (defaults to red).
$candy-app-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent, $candy-app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($candy-app-theme);

.custom-ripple {
  .mat-ripple-element {
    // background-color: rgba(100, 200, 50, 1) !important;
  }
}
  $app-primary: mat-palette($mat-light-blue, A700);
  $app-accent: mat-palette($mat-pink, A200, A100, A400);

  $app-theme: mat-light-theme($app-primary, $app-accent);

  @mixin mix-app-theme($app-theme) {
    $primary: map-get($app-theme, primary);
    $accent: map-get($app-theme, accent);

    .mat-button.accent_btn {
      background-color: mat-color($primary);
    }
    .mat-button.system_action_btn{
      background-color: mat-color($primary);
      min-width: 1px;
    }
    .mat-button.system_action_circle_btn{
      background-color: #263238;
      color: #fff;
      min-width: 1px;
    }
  }

  // Include the mixin
  @include mix-app-theme($app-theme);
